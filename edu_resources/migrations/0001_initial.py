# Generated by Django 5.1.4 on 2025-02-08 14:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EduGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('work_plan', models.CharField(max_length=15)),
                ('form', models.CharField(max_length=20)),
                ('course', models.IntegerField()),
                ('naprav', models.CharField(max_length=100)),
                ('profile', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('size', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=50)),
                ('size', models.IntegerField(null=True)),
                ('type', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.FloatField()),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('kafedra', models.CharField(max_length=150)),
                ('stepen', models.CharField(max_length=100, null=True)),
                ('zvanie', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('semester', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('hours', models.FloatField(null=True)),
                ('kafedra', models.CharField(max_length=100)),
                ('myam', models.CharField(max_length=3)),
                ('groups', models.ManyToManyField(to='edu_resources.edugroup')),
                ('teachers', models.ManyToManyField(to='edu_resources.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='LessonPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=13)),
                ('time_start', models.TimeField()),
                ('time_finish', models.TimeField()),
                ('discipline', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_resources.discipline')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(max_length=10, null=True)),
                ('short_name', models.CharField(max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('edu_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.edugroup')),
                ('teacher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.teacher')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeacherLimitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(max_length=13)),
                ('time_start', models.TimeField()),
                ('time_finish', models.TimeField()),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='edu_resources.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Week',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(null=True)),
                ('start_date', models.DateField()),
                ('finish_date', models.DateField()),
                ('semester', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.semester')),
            ],
        ),
        migrations.CreateModel(
            name='LessonsFrom1c',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=13, null=True)),
                ('discipline', models.CharField(max_length=100, null=True)),
                ('date', models.DateField()),
                ('start_time', models.TimeField(null=True)),
                ('finish_time', models.TimeField(null=True)),
                ('groups', models.ManyToManyField(to='edu_resources.edugroup')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.room')),
                ('teachers', models.ManyToManyField(to='edu_resources.teacher')),
                ('week', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.week')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=13, null=True)),
                ('date', models.DateField()),
                ('start_time', models.TimeField(null=True)),
                ('finish_time', models.TimeField(null=True)),
                ('discipline', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.discipline')),
                ('groups', models.ManyToManyField(to='edu_resources.edugroup')),
                ('room', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.room')),
                ('week', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='edu_resources.week')),
            ],
        ),
    ]
